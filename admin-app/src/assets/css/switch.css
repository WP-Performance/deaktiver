label.dkr_switch {
    display: block;
    width: 100%;
    padding: 1rem;
    border: 2px dotted transparent;
    border-radius: 5px;
}

label.dkr_switch .label {
    display: block;
    user-select: none;
    margin-bottom: .7rem;
    font-weight: bold;
    font-size: 1rem;
}

label.dkr_switch p {
    margin-top: 0;
}

label.dkr_switch input[role="switch"] {
    opacity: 0;
    width: 0px;
    height: 0px;
    min-width: 0px;
    margin: 0;
    border: 0px;
    padding: 0;
}

label.dkr_switch input[role="switch"] ~ .state {
    display: inline-block;
    user-select: none;
}

label.dkr_switch input[role="switch"] ~ .state > .container {
    position: relative;
    top: 2px;
    display: inline-block;
    border: 2px solid black;
    width: 40px;
    height: 20px;
    border-radius: 11px;
}

label.dkr_switch input[role="switch"] ~ .state > .container > .position {
    position: relative;
    top: 1px;
    left: 2px;
    display: inline-block;
    border: 2px solid black;
    border-radius: 9px;
    width: 14px;
    height: 14px;
    background: black;
    opacity: 0.6;
    transition: all .2s ease-in-out;
}

label.dkr_switch input[role="switch"]:not(:checked) ~ .state span.on {
    display: none;
}

label.dkr_switch input[role="switch"]:checked ~ .state > span.off {
    display: none;
}

label input[role="switch"]:checked ~ .state > .container > .position {
    left: 20px;
    border-color: var(--dkr-success-dark);
    background: var(--dkr-success);
    opacity: 1;
}

label.focus {
    border-color: var(--dkr-primary-dark);
    outline: none;
    background-color: #def;
    cursor: pointer;
}

label:hover:not(.focus) {
    border-color: var(--dkr-success-dark);
    outline: none;
    background-color: #e9f0e2;
    cursor: pointer;
}

label.focus span.container,
label:hover span.container {
    background-color: white;
}
